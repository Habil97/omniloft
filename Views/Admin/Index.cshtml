@using Newtonsoft.Json
@model Verveo.Models.AdminPanelViewModel
@{
    ViewData["Title"] = "Admin Paneli";
}


<div class="container py-5">
    <!-- Kısa Yol Kartları -->
    <div class="row mb-4 g-4">
            <h2 class="mb-4">Admin Paneli</h2>
        <div class="col-md-2 col-6">
            <a href="/Admin/Products" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-product text-white">
                <i class="fas fa-box-open fa-3x mb-2"></i>
                <div class="fw-bold">Ürünler</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/Categories" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-category text-white">
                <i class="fas fa-tags fa-3x mb-2"></i>
                <div class="fw-bold">Kategoriler</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/Orders" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-order text-white">
                <i class="fas fa-shopping-cart fa-3x mb-2"></i>
                <div class="fw-bold">Siparişler</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/Sliders" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-slider text-white">
                <i class="fas fa-images fa-3x mb-2"></i>
                <div class="fw-bold">Sliderlar</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/Users" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-user text-white">
                <i class="fas fa-users fa-3x mb-2"></i>
                <div class="fw-bold">Kullanıcılar</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/Roles" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-role text-white">
                <i class="fas fa-user-shield fa-3x mb-2"></i>
                <div class="fw-bold">Roller</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/AdminNewsletter/Newsletter" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-newsletter text-white">
                <i class="fas fa-envelope-open-text fa-3x mb-2"></i>
                <div class="fw-bold">E-Bülten</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/ReturnRequests" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-newsletter text-white">
                <i class="fas fa-backspace fa-3x mb-2"></i>
                <div class="fw-bold">İade/Değişim</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/Logs" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-newsletter text-white">
                <i class="fab fa-microblog fa-3x mb-2"></i>
                <div class="fw-bold">Log Geçmişi</div>
            </a>
        </div>
        <div class="col-md-2 col-6">
            <a href="/Admin/Reviews" class="shortcut-card d-block text-center p-4 shadow-sm rounded bg-gradient-newsletter text-white">
                <i class="fas fa-comment fa-3x mb-2"></i>
                <div class="fw-bold">Gelen Yorumlar</div>
            </a>
        </div>
    </div>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
<style>
    .bg-gradient-newsletter { background: linear-gradient(90deg,#43cea2 0%,#ffb347 100%); }
    .bg-gradient-returnrequest { background: linear-gradient(90deg,#ffb347 0%,#43cea2 100%); }
    .card-header.bg-gradient-primary {
        background: linear-gradient(90deg,#43cea2 0%,#185a9d 100%) !important;
        color: #fff !important;
        font-weight: bold;
        font-size: 1.1rem;
        letter-spacing: 0.5px;
        border-radius: 1rem 1rem 0 0;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    }
    .shortcut-card {
        transition: transform 0.2s, box-shadow 0.2s;
        cursor: pointer;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    }
    .shortcut-card:hover {
        transform: translateY(-6px) scale(1.04);
        box-shadow: 0 6px 16px rgba(0,0,0,0.12);
        text-decoration: none;
        opacity: 0.95;
    }
    .bg-gradient-product { background: linear-gradient(90deg,#43cea2 0%,#185a9d 100%); }
    .bg-gradient-category { background: linear-gradient(90deg,#e96443 0%,#904e95 100%); }
    .bg-gradient-order { background: linear-gradient(90deg,#ffb347 0%,#ffcc33 100%); }
    .bg-gradient-slider { background: linear-gradient(90deg,#232526 0%,#414345 100%); }
    .bg-gradient-user { background: linear-gradient(90deg,#43cea2 0%,#e96443 100%); }
    .bg-gradient-role { background: linear-gradient(90deg,#185a9d 0%,#ffb347 100%); }
</style>
    <!-- Bildirimler ve Uyarılar 
    <div class="mb-4">
        @{
            var lowStockProducts = Model.Products?.Where(p => p.Stock <= 5).ToList() ?? new List<Verveo.Entities.Product>();
            var newOrders = Model.Orders?.Where(o => o.CreatedAt > DateTime.Now.AddDays(-1)).ToList() ?? new List<Verveo.Entities.Order>();
            var passiveProducts = Model.Products?.Where(p => !p.IsActive).ToList() ?? new List<Verveo.Entities.Product>();
            var passiveCategories = Model.Categories?.Where(c => !c.IsActive).ToList() ?? new List<Verveo.Entities.Category>();
        }
        @if (lowStockProducts.Count > 0)
        {
            <div class="alert alert-warning mb-2" style="border-radius:1rem;">
                <strong>Düşük Stok Uyarısı:</strong> @lowStockProducts.Count adet ürünün stoğu kritik seviyede!
                <ul class="mb-0">
                    @foreach (var p in lowStockProducts.Take(5))
                    {
                        <li>@p.Name (Stok: @p.Stock)</li>
                    }
                </ul>
            </div>
        }
        @if (newOrders.Count > 0)
        {
            <div class="alert alert-info mb-2" style="border-radius:1rem;">
                <strong>Yeni Sipariş:</strong> Son 24 saatte @newOrders.Count yeni sipariş alındı!
            </div>
        }
        @if (passiveProducts.Count > 0)
        {
            <div class="alert alert-danger mb-2" style="border-radius:1rem;">
                <strong>Pasif Ürünler:</strong> @passiveProducts.Count adet ürün pasif durumda!
            </div>
        }
        @if (passiveCategories.Count > 0)
        {
            <div class="alert alert-danger mb-2" style="border-radius:1rem;">
                <strong>Pasif Kategoriler:</strong> @passiveCategories.Count adet kategori pasif durumda!
            </div>
        }
    </div>
-->
    <div class="row mb-4">
        <div class="col-md-2">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Toplam Ürün</h6>
                    <p class="display-6 fw-bold">
                        @{
                            var productCount = Model.Products != null ? Model.Products.Count : 0;
                        }
                        @productCount
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Toplam Kategori</h6>
                    <p class="display-6 fw-bold">
                        @{
                            var categoryCount = Model.Categories != null ? Model.Categories.Count : 0;
                        }
                        @categoryCount
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Toplam Kullanıcı</h6>
                    <p class="display-6 fw-bold">
                        @{
                            var userCount = Model.Users != null ? Model.Users.Count : 0;
                        }
                        @userCount
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Toplam Sipariş</h6>
                    <p class="display-6 fw-bold">
                        @{
                            var orderCount = Model.Orders != null ? Model.Orders.Count : 0;
                        }
                        @orderCount
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Toplam Ciro</h6>
                    <p class="display-6 fw-bold">
                        @{
                            var totalRevenue = (Model.Orders != null) ? Model.Orders.Sum(o => o.Total) : 0;
                        }
                        @totalRevenue.ToString("C")
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!--
    <ul class="nav nav-tabs mb-4" style="gap: 1rem;">
        <li class="nav-item">
            <a class="nav-link active" id="users-tab" data-bs-toggle="tab" href="#users">Kullanıcılar</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="products-tab" data-bs-toggle="tab" href="#products">Ürünler</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders">Siparişler</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="sliders-tab" data-bs-toggle="tab" href="#sliders">Sliderlar</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="categories-tab" data-bs-toggle="tab" href="#categories">Kategoriler</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="roles-tab" data-bs-toggle="tab" href="#roles">Roller</a>
        </li>
    </ul>
    -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card shadow-sm mb-3">
                    <div class="card-header bg-gradient-primary text-white fw-bold">Son Eklenen Ürünler</div>
                    <div class="card-body">
                        <ul class="list-group">
                            <tbody id="recentProductTableBody">
                            @foreach (var product in Model.Products?.OrderByDescending(p => p.Id).Take(5) ?? new List<Verveo.Entities.Product>())
                            {
                                <tr>
                                    <td class="recent-product-name">@product.Name</td>
                                    <td><span class="badge bg-success">@product.Price.ToString("C")</span></td>
                                </tr>
                            }
                            </tbody>
                        </ul>
                        <a href="/Admin/AddProduct" class="btn btn-sm btn-gradient-premium mt-3">+ Hızlı Ürün Ekle</a>
                        <script>
                        document.addEventListener('DOMContentLoaded', function() {
                            const searchInput = document.getElementById('recentProductSearch');
                            const statusFilter = document.getElementById('recentProductStatusFilter');
                            const tableBody = document.getElementById('recentProductTableBody');
                            searchInput.addEventListener('input', filterRecentProducts);
                            statusFilter.addEventListener('change', filterRecentProducts);
                            function filterRecentProducts() {
                                const search = searchInput.value.toLowerCase();
                                const status = statusFilter.value;
                                Array.from(tableBody.rows).forEach(row => {
                                    const name = row.querySelector('.recent-product-name').textContent.toLowerCase();
                                    const prodStatus = row.querySelector('.recent-product-status').textContent;
                                    const matchesSearch = name.includes(search);
                                    const matchesStatus = !status || prodStatus === status;
                                    row.style.display = (matchesSearch && matchesStatus) ? '' : 'none';
                                });
                            }
                        });
                        </script>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card shadow-sm mb-3">
                    <div class="card-header bg-gradient-primary text-white fw-bold">Son Siparişler</div>
                    <div class="card-body">
                        <ul class="list-group">
                            @foreach (var order in Model.Orders?.OrderByDescending(o => o.Id).Take(5) ?? new List<Verveo.Entities.Order>())
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <span>Sipariş #@order.Id</span>
                                    <span class="badge bg-info">@order.Total.ToString("C")</span>
                                </li>
                            }
                        </ul>
                        <a href="/Admin/Orders" class="btn btn-sm btn-gradient-premium mt-3">Siparişleri Gör</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card shadow-sm mb-3">
                    <div class="card-header bg-gradient-primary text-white fw-bold">Son 7 Gün Sipariş Adedi</div>
                    <div class="card-body">
                        <canvas id="ordersChart" height="180"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card shadow-sm mb-3">
                    <div class="card-header bg-gradient-primary text-white fw-bold">Son 7 Gün Ciro</div>
                    <div class="card-body">
                        <canvas id="revenueChart" height="180"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card shadow-sm mb-3">
                    <div class="card-header bg-gradient-primary text-white fw-bold">En Çok Satan Ürünler</div>
                    <div class="card-body">
                        <canvas id="topProductsChart" height="180"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card shadow-sm mb-3">
                    <div class="card-header bg-gradient-primary text-white fw-bold">En Çok Satan Kategoriler</div>
                    <div class="card-body">
                        <canvas id="topCategoriesChart" height="180"></canvas>
                    </div>
                </div>
            </div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>
// Yeni sipariş toast bildirimi
@if ((Model.Orders?.Where(o => o.CreatedAt > DateTime.Now.AddMinutes(-5)).Count() ?? 0) > 0)
{
    <text>
    window.addEventListener('DOMContentLoaded', function() {
        Toastify({
            text: "Yeni sipariş alındı!",
            duration: 5000,
            close: true,
            gravity: "top",
            position: "right",
            backgroundColor: "linear-gradient(90deg,#43cea2 0%,#185a9d 100%)",
            stopOnFocus: true
        }).showToast();
    });
    </text>
}
window.ordersLabels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.OrdersPerDayLabels));
window.ordersData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.OrdersPerDay));
window.revenueData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RevenuePerDay));
window.topProductsLabels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TopProductsLabels));
window.topProductsData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TopProductsData));
window.topCategoriesLabels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TopCategoriesLabels));
window.topCategoriesData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TopCategoriesData));
</script>
        </div>
  <!--
    <div class="tab-content p-4 bg-white rounded shadow-sm">
        <div class="tab-pane fade show active" id="users">
            <h5 class="mb-3">Kullanıcılar</h5>
            <ul class="list-group mb-3">
                @foreach (var user in Model.Users)
                {
                    <li class="list-group-item">@user.Username - @user.Email</li>
                }
            </ul>
            <a href="/Admin/Users" class="btn btn-outline-primary">Kullanıcıları Yönet</a>
        </div>
        <div class="tab-pane fade" id="products">
            <h5 class="mb-3">Ürünler</h5>
            <ul class="list-group mb-3">
                @foreach (var product in Model.Products)
                {
                    <li class="list-group-item">@product.Name - @product.Price.ToString("C")</li>
                }
            </ul>
            <a href="/Admin/Products" class="btn btn-outline-primary">Ürünleri Yönet</a>
        </div>
        <div class="tab-pane fade" id="orders">
            <h5 class="mb-3">Siparişler</h5>
            <ul class="list-group mb-3">
                @foreach (var order in Model.Orders)
                {
                    <li class="list-group-item">@order.Id - @order.Total.ToString("C") - @order.Status</li>
                }
            </ul>
            <a href="/Admin/Orders" class="btn btn-outline-primary">Siparişleri Yönet</a>
        </div>
        <div class="tab-pane fade" id="sliders">
            <h5 class="mb-3">Sliderlar</h5>
            <a href="/Admin/Sliders" class="btn btn-outline-primary">Sliderları Yönet</a>
        </div>
        <div class="tab-pane fade" id="categories">
            <h5 class="mb-3">Kategoriler</h5>
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {
                <ul class="list-group mb-3">
                    @foreach (var category in Model.Categories)
                    {
                        <li class="list-group-item">@category.Name - @category.Description</li>
                    }
                </ul>
            }
            else
            {
                <div class="alert alert-info">Hiç kategori bulunamadı.</div>
            }
            <a href="/Admin/Categories" class="btn btn-outline-primary mt-2">Kategorileri Yönet</a>
        </div>
        <div class="tab-pane fade" id="roles">
            <h5 class="mb-3">Roller</h5>
            @if (Model.Roles != null && Model.Roles.Count > 0)
            {
                <ul class="list-group mb-3">
                    @foreach (var role in Model.Roles)
                    {
                        <li class="list-group-item">@role.Name</li>
                    }
                </ul>
            }
            else
            {
                <div class="alert alert-info">Hiç rol bulunamadı.</div>
            }
            <a href="/Admin/Roles" class="btn btn-outline-primary mt-2">Rolleri Yönet</a>
        </div>
    </div>
 -->
</div>
@{
    var orderCounts = ViewBag.OrderCounts as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
}
@if (orderCounts.Any())
{
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Son 7 Gün Sipariş Adedi</h5>
            <canvas id="ordersChart" height="120"></canvas>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const labels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(orderCounts.Select(x => x.Date)));
        const data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(orderCounts.Select(x => x.Count)));
        const ctx = document.getElementById('ordersChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Sipariş Adedi',
                    data: data,
                    backgroundColor: '#43cea2'
                }]
            },
            options: {
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    </script>
}
else
{
    <div class="alert alert-info">Son 7 gün sipariş verisi bulunamadı.</div>
}


